/*******************************************************************************
 * Copyright (c) 2010, 2012 Tasktop Technologies
 * Copyright (c) 2010, 2011 SpringSource, a division of VMware
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Tasktop Technologies - initial API and implementation
 ******************************************************************************/
package com.tasktop.c2c.server.internal.tasks.domain;

// Generated May 26, 2010 11:31:55 AM by Hibernate Tools 3.3.0.GA

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Flags generated by hbm2java
 */
@Entity
@Table(name = "flags")
@SuppressWarnings("serial")
public class Flags implements java.io.Serializable {

	private Integer id;
	private Flagtypes flagtypes;
	private Profile profilesByRequesteeId;
	private Profile profilesBySetterId;
	private Task bugs;
	private Attachment attachments;
	private char status;
	private Date creationDate;
	private Date modificationDate;

	public Flags() {
	}

	@Id
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "type_id", nullable = false)
	public Flagtypes getFlagtypes() {
		return this.flagtypes;
	}

	public void setFlagtypes(Flagtypes flagtypes) {
		this.flagtypes = flagtypes;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "requestee_id")
	public Profile getProfilesByRequesteeId() {
		return this.profilesByRequesteeId;
	}

	public void setProfilesByRequesteeId(Profile profilesByRequesteeId) {
		this.profilesByRequesteeId = profilesByRequesteeId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "setter_id")
	public Profile getProfilesBySetterId() {
		return this.profilesBySetterId;
	}

	public void setProfilesBySetterId(Profile profilesBySetterId) {
		this.profilesBySetterId = profilesBySetterId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "bug_id", nullable = false)
	public Task getBugs() {
		return this.bugs;
	}

	public void setBugs(Task bugs) {
		this.bugs = bugs;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "attach_id")
	public Attachment getAttachments() {
		return this.attachments;
	}

	public void setAttachments(Attachment attachments) {
		this.attachments = attachments;
	}

	@Column(name = "status", nullable = false, length = 1)
	public char getStatus() {
		return this.status;
	}

	public void setStatus(char status) {
		this.status = status;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "creation_date", nullable = false, length = 19)
	public Date getCreationDate() {
		return this.creationDate;
	}

	public void setCreationDate(Date creationDate) {
		this.creationDate = creationDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "modification_date", length = 19)
	public Date getModificationDate() {
		return this.modificationDate;
	}

	public void setModificationDate(Date modificationDate) {
		this.modificationDate = modificationDate;
	}

}
