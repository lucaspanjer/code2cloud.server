/*******************************************************************************
 * Copyright (c) 2010, 2012 Tasktop Technologies
 * Copyright (c) 2010, 2011 SpringSource, a division of VMware
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Tasktop Technologies - initial API and implementation
 ******************************************************************************/
package com.tasktop.c2c.server.internal.tasks.domain;

// Generated May 26, 2010 11:31:55 AM by Hibernate Tools 3.3.0.GA

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.eclipse.persistence.annotations.Convert;

/**
 * Flagtypes generated by hbm2java
 */
@Entity
@Table(name = "flagtypes")
@SuppressWarnings("serial")
public class Flagtypes implements java.io.Serializable {

	private Short id;
	private Group groupsByRequestGroupId;
	private Group groupsByGrantGroupId;
	private String name;
	private String description;
	private String ccList;
	private char targetType;
	private boolean isActive;
	private boolean isRequestable;
	private boolean isRequesteeble;
	private boolean isMultiplicable;
	private short sortkey;
	private Set<Flags> flagses = new HashSet<Flags>(0);
	private Set<Flaginclusions> flaginclusionses = new HashSet<Flaginclusions>(0);
	private Set<Flagexclusions> flagexclusionses = new HashSet<Flagexclusions>(0);

	public Flagtypes() {
	}

	@Id
	@Column(name = "id", unique = true, nullable = false)
	public Short getId() {
		return this.id;
	}

	public void setId(Short id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "request_group_id")
	public Group getGroupsByRequestGroupId() {
		return this.groupsByRequestGroupId;
	}

	public void setGroupsByRequestGroupId(Group groupsByRequestGroupId) {
		this.groupsByRequestGroupId = groupsByRequestGroupId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "grant_group_id")
	public Group getGroupsByGrantGroupId() {
		return this.groupsByGrantGroupId;
	}

	public void setGroupsByGrantGroupId(Group groupsByGrantGroupId) {
		this.groupsByGrantGroupId = groupsByGrantGroupId;
	}

	@Column(name = "name", nullable = false, length = 50)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "description", nullable = false, length = 16777215)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "cc_list", length = 200)
	public String getCcList() {
		return this.ccList;
	}

	public void setCcList(String ccList) {
		this.ccList = ccList;
	}

	@Column(name = "target_type", nullable = false, length = 1)
	public char getTargetType() {
		return this.targetType;
	}

	public void setTargetType(char targetType) {
		this.targetType = targetType;
	}

	@Column(name = "is_active", nullable = false)
	@Convert("booleanToByte")
	public boolean getIsActive() {
		return this.isActive;
	}

	public void setIsActive(boolean isActive) {
		this.isActive = isActive;
	}

	@Column(name = "is_requestable", nullable = false)
	@Convert("booleanToByte")
	public boolean getIsRequestable() {
		return this.isRequestable;
	}

	public void setIsRequestable(boolean isRequestable) {
		this.isRequestable = isRequestable;
	}

	@Column(name = "is_requesteeble", nullable = false)
	@Convert("booleanToByte")
	public boolean getIsRequesteeble() {
		return this.isRequesteeble;
	}

	public void setIsRequesteeble(boolean isRequesteeble) {
		this.isRequesteeble = isRequesteeble;
	}

	@Column(name = "is_multiplicable", nullable = false)
	@Convert("booleanToByte")
	public boolean getIsMultiplicable() {
		return this.isMultiplicable;
	}

	public void setIsMultiplicable(boolean isMultiplicable) {
		this.isMultiplicable = isMultiplicable;
	}

	@Column(name = "sortkey", nullable = false)
	public short getSortkey() {
		return this.sortkey;
	}

	public void setSortkey(short sortkey) {
		this.sortkey = sortkey;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "flagtypes")
	public Set<Flags> getFlagses() {
		return this.flagses;
	}

	public void setFlagses(Set<Flags> flagses) {
		this.flagses = flagses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "flagtypes")
	public Set<Flaginclusions> getFlaginclusionses() {
		return this.flaginclusionses;
	}

	public void setFlaginclusionses(Set<Flaginclusions> flaginclusionses) {
		this.flaginclusionses = flaginclusionses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "flagtypes")
	public Set<Flagexclusions> getFlagexclusionses() {
		return this.flagexclusionses;
	}

	public void setFlagexclusionses(Set<Flagexclusions> flagexclusionses) {
		this.flagexclusionses = flagexclusionses;
	}

}
