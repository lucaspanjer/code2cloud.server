/*******************************************************************************
 * Copyright (c) 2010, 2012 Tasktop Technologies
 * Copyright (c) 2010, 2011 SpringSource, a division of VMware
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Tasktop Technologies - initial API and implementation
 ******************************************************************************/
package com.tasktop.c2c.server.internal.tasks.domain;

// Generated May 26, 2010 11:31:55 AM by Hibernate Tools 3.3.0.GA

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * SeriesCategories generated by hbm2java
 */
@Entity
@Table(name = "series_categories", uniqueConstraints = @UniqueConstraint(columnNames = "name"))
@SuppressWarnings("serial")
public class SeriesCategories implements java.io.Serializable {

	private Short id;
	private String name;
	private Set<Series> seriesesForSubcategory = new HashSet<Series>(0);
	private Set<CategoryGroupMap> categoryGroupMaps = new HashSet<CategoryGroupMap>(0);
	private Set<Series> seriesesForCategory = new HashSet<Series>(0);

	public SeriesCategories() {
	}

	@Id
	@Column(name = "id", unique = true, nullable = false)
	public Short getId() {
		return this.id;
	}

	public void setId(Short id) {
		this.id = id;
	}

	@Column(name = "name", unique = true, nullable = false, length = 64)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "seriesCategoriesBySubcategory")
	public Set<Series> getSeriesesForSubcategory() {
		return this.seriesesForSubcategory;
	}

	public void setSeriesesForSubcategory(Set<Series> seriesesForSubcategory) {
		this.seriesesForSubcategory = seriesesForSubcategory;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "seriesCategories")
	public Set<CategoryGroupMap> getCategoryGroupMaps() {
		return this.categoryGroupMaps;
	}

	public void setCategoryGroupMaps(Set<CategoryGroupMap> categoryGroupMaps) {
		this.categoryGroupMaps = categoryGroupMaps;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "seriesCategoriesByCategory")
	public Set<Series> getSeriesesForCategory() {
		return this.seriesesForCategory;
	}

	public void setSeriesesForCategory(Set<Series> seriesesForCategory) {
		this.seriesesForCategory = seriesesForCategory;
	}

}
