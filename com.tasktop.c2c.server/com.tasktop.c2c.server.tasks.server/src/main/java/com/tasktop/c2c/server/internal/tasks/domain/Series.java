/*******************************************************************************
 * Copyright (c) 2010, 2012 Tasktop Technologies
 * Copyright (c) 2010, 2011 SpringSource, a division of VMware
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Tasktop Technologies - initial API and implementation
 ******************************************************************************/
package com.tasktop.c2c.server.internal.tasks.domain;

// Generated May 26, 2010 11:31:55 AM by Hibernate Tools 3.3.0.GA

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.eclipse.persistence.annotations.Convert;

/**
 * Series generated by hbm2java
 */
@Entity
@Table(name = "series", uniqueConstraints = @UniqueConstraint(columnNames = { "creator", "category", "subcategory",
		"name" }))
@SuppressWarnings("serial")
public class Series implements java.io.Serializable {

	private Integer seriesId;
	private SeriesCategories seriesCategoriesBySubcategory;
	private SeriesCategories seriesCategoriesByCategory;
	private Profile profiles;
	private String name;
	private short frequency;
	private String query;
	private boolean isPublic;
	private Set<SeriesData> seriesDatas = new HashSet<SeriesData>(0);

	public Series() {
	}

	@Id
	@Column(name = "series_id", unique = true, nullable = false)
	public Integer getSeriesId() {
		return this.seriesId;
	}

	public void setSeriesId(Integer seriesId) {
		this.seriesId = seriesId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "subcategory", nullable = false)
	public SeriesCategories getSeriesCategoriesBySubcategory() {
		return this.seriesCategoriesBySubcategory;
	}

	public void setSeriesCategoriesBySubcategory(SeriesCategories seriesCategoriesBySubcategory) {
		this.seriesCategoriesBySubcategory = seriesCategoriesBySubcategory;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "category", nullable = false)
	public SeriesCategories getSeriesCategoriesByCategory() {
		return this.seriesCategoriesByCategory;
	}

	public void setSeriesCategoriesByCategory(SeriesCategories seriesCategoriesByCategory) {
		this.seriesCategoriesByCategory = seriesCategoriesByCategory;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "creator")
	public Profile getProfiles() {
		return this.profiles;
	}

	public void setProfiles(Profile profiles) {
		this.profiles = profiles;
	}

	@Column(name = "name", nullable = false, length = 64)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "frequency", nullable = false)
	public short getFrequency() {
		return this.frequency;
	}

	public void setFrequency(short frequency) {
		this.frequency = frequency;
	}

	@Column(name = "query", nullable = false, length = 16777215)
	public String getQuery() {
		return this.query;
	}

	public void setQuery(String query) {
		this.query = query;
	}

	@Column(name = "is_public", nullable = false)
	@Convert("booleanToByte")
	public boolean getIsPublic() {
		return this.isPublic;
	}

	public void setIsPublic(boolean isPublic) {
		this.isPublic = isPublic;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "series")
	public Set<SeriesData> getSeriesDatas() {
		return this.seriesDatas;
	}

	public void setSeriesDatas(Set<SeriesData> seriesDatas) {
		this.seriesDatas = seriesDatas;
	}

}
